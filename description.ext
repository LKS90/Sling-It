#define COLOR_HALF_BLACK { 0, 0, 0, 0.5 }
#define COLOR_LIGHT_GRAY {.7686, .7686, .7686, 1}
#define COLOR_TRANSPARENT { 0, 0, 0, 0 }
#define COLOR_WHITE {1,1,1,1}

minScore = 0;
avgScore = 100000;
maxScore = 1000000;
loadScreen = "workshopPicture.paa";
overviewPicture = "workshopPicture.paa";
overviewText = "Deliver Cargo to up to 82 destinations. Fully customizable with various helicopters and custom GUI to change time, weather and fog as well as configuring the cargo.";
author = "LKS"; // Author
onLoadName = "Sling It"; // Mission name (temporary solution; actual name set in editor will be used later in the alpha)
onLoadMission = "Deliver the Cargo. Adjust mission at the Laptop."; // Description

class RscText;

class CfgDebriefing
{
	class End1
	{
		title = "Success!";
		description = "You have delivered all the cargo. Congratulations! All 82 locations have been serviced. Good Job.";
		picture = "mil_end";
		pictureColor[] = {0.1, 0.7, 0.2, 1};
	};
};

class Setup
{    
	idd = 10000;
	class controls
	{
		class Base
		{
			font = "PuristaMedium";
			text = "";
		};
				
		class Background : Base
		{    
			idc = -1;
			type = 0;
			style = 0;
			x = -0.5; 
			y = -0.2;
			w = 2;
			h = 1.5;
			sizeEx = 0.2;
			colorBackground[] = {0.15,0.15,0.15,1};
			colorText[] = {1,1,1,1};
		};
		class Title : Base
		{
			type = 0;
			idc = -1;
			style = ST_MULTI;
			colorBackground[] = COLOR_TRANSPARENT;
			colorText[] = COLOR_LIGHT_GRAY;
			text = "Sling It - Setup";
			sizeEx = .16;
			lineSpacing = 1;
			x = -0.42;
			y = -0.18;
			w = 1.1;
			h = 0.15;
		};
		class CargoToggleButton : Base
		{
			type = 1;  // CT_BUTTON
			style = 2; // ST_CENTER
			fadein = 0;
			fadeout = 0;
			idc = 10000;
			x = 1.2;
			y = .5;
			w = .24;
			h = .07;
			text = "Switch Cargo";
			sizeEx = .05;
	
			colorText[] = {1,1,1,1};                    			 // colors of text and background
			colorBackground[] = {.4,.4,.4,.6};            			 // red text on blue background 
			colorFocused[] = {.4,.4,.4,.6};                			 // background's opacity changes when having focus
			colorBackgroundActive[] = {.2,.2,.2,.6};       			 // background turns green on mouseOver 
			 
			colorDisabled[] = {.3,.3,.3,1};             			 // colors if disabled
			colorBackgroundDisabled[] = {.1,.1,.1,1};   			 

			colorShadow[] = {0,0,0,.3};                 			 // color and offset of drop shadow
			offsetX = .001;                             			  
			offsetY = .001;                             			  

			offsetPressedX = .0005;                     			  // offset when pressed
			offsetPressedY = .0005;                     			   

			borderSize = 0;                             			 // no left-hand border
			colorBorder[] = {};                         			 

			soundEnter[] = {};                          			 // no sounds
			soundPush[] = {};			 
			soundClick[] = {};			 
			soundEscape[] = {};			 

			action = "call f_toggleCargo"; // action when pressed
			toolTip = "Switch between normal and heavy";			 // tooltip
		};
		
		class CargoResetButton : Base
		{
			type = 1;  // CT_BUTTON
			style = 2; // ST_CENTER
			fadein = 0;
			fadeout = 0;
			idc = 10000;
			x = 1.2;
			y = .7;
			w = .24;
			h = .07;
			text = "Reset Cargo";
			sizeEx = .05;
	
			colorText[] = {1,1,1,1};                    			 	// colors of text and background
			colorBackground[] = {.4,.4,.4,.6};            			 	// red text on blue background 
			colorFocused[] = {.4,.4,.4,.6};                			 	// background's opacity changes when having focus
			colorBackgroundActive[] = {.2,.2,.2,.6};       			 	// background turns green on mouseOver 
			 
			colorDisabled[] = {.3,.3,.3,1};             			 	// colors if disabled
			colorBackgroundDisabled[] = {.1,.1,.1,1};   			 

			colorShadow[] = {0,0,0,.3};                 			 	// color and offset of drop shadow
			offsetX = .001;                             			  
			offsetY = .001;                             			  

			offsetPressedX = .0005;                     			  	// offset when pressed
			offsetPressedY = .0005;                     			   

			borderSize = 0;                             			 	// no left-hand border
			colorBorder[] = {};                         			 

			soundEnter[] = {};                          			 	// no sounds
			soundPush[] = {};			 
			soundClick[] = {};			 
			soundEscape[] = {};			 

			action = "call f_resetCargo";								// action when pressed
			toolTip = "Spawn a new Crate at the Base";		 			// tooltip
		};
		
		class ApplyButton : Base
		{
			type = 1;  // CT_BUTTON
			style = 2; // ST_CENTER
			fadein = 0;
			fadeout = 0;
			idc = 10001;
			x = 1.2;
			y = 0.05;
			w = .18;
			h = .07;
			text = "Apply";
			sizeEx = .05;
	
			colorText[] = {1,1,1,1};                    			 // colors of text and background
			colorBackground[] = {.4,.4,.4,.6};            			 // red text on blue background 
			colorFocused[] = {.4,.4,.4,.6};                			 // background's opacity changes when having focus
			colorBackgroundActive[] = {.2,.2,.2,.6};       			 // background turns green on mouseOver 
			 
			colorDisabled[] = {.3,.3,.3,1};             			 // colors if disabled
			colorBackgroundDisabled[] = {.1,.1,.1,1};   			 

			colorShadow[] = {0,0,0,.3};                 			 // color and offset of drop shadow
			offsetX = .001;                             			  
			offsetY = .001;                             			  

			offsetPressedX = .0005;                     			  // offset when pressed
			offsetPressedY = .0005;                     			   

			borderSize = 0;                             			 // no left-hand border
			colorBorder[] = {};                         			 

			soundEnter[] = {};                          			 // no sounds
			soundPush[] = {};			 
			soundClick[] = {};			 
			soundEscape[] = {};			 

			action = "call f_apply"; 								 // action when pressed
			toolTip = "Apply Overcast/Time settings";				 // tooltip
		};
		
		class CloseButton : Base
		{
			type = 1;  // CT_BUTTON
			style = 2; // ST_CENTER
			fadein = 0;
			fadeout = 0;
			idc = 10002;
			x = 1.2;
			y = .15;
			w = .18;
			h = .07;
			text = "Close";
			sizeEx = .05;
	
			colorText[] = {1,1,1,1};                    			 // colors of text and background
			colorBackground[] = {.4,.4,.4,.6};            			 // red text on blue background 
			colorFocused[] = {.4,.4,.4,.6};                			 // background's opacity changes when having focus
			colorBackgroundActive[] = {.2,.2,.2,.6};       			 // background turns green on mouseOver 
			 
			colorDisabled[] = {.3,.3,.3,1};             			 // colors if disabled
			colorBackgroundDisabled[] = {.1,.1,.1,1};   			 

			colorShadow[] = {0,0,0,.3};                 			 // color and offset of drop shadow
			offsetX = .001;                             			  
			offsetY = .001;                             			  

			offsetPressedX = .0005;                     			  // offset when pressed
			offsetPressedY = .0005;                     			   

			borderSize = 0;                             			 // no left-hand border
			colorBorder[] = {};                         			 

			soundEnter[] = {};                          			 // no sounds
			soundPush[] = {};			 
			soundClick[] = {};			 
			soundEscape[] = {};			 

			action = "closeDialog 2"; 								 // action when pressed
			toolTip = "Close the Setup Window";						 // tooltip
		};
		
		class OvercastSlider : Base
		{
			idc = 10010;
			type = 3; 
			style = 1024; 
			colorBackground[] = COLOR_TRANSPARENT;
			colorText[] = COLOR_WHITE;
			x = 0; 
			y = 0.18; 
			w = 1; 
			h = 0.1;			
			sizeEx = .05;
			color[] = COLOR_LIGHT_GRAY; 
			colorActive[] = COLOR_LIGHT_GRAY;
			// EventHandler to update the slider via the mouse wheel 
			onMouseZChanged = "_step = (sliderSpeed (_this select 0)) select 1; _dir = if (_this select 1>0) then {1} else {-1}; (_this select 0) sliderSetPosition (sliderPosition (_this select 0) + _step*_dir)"; 
		};
		class OvercastText : Base
		{
			type = 0;
			idc = 10011;
			style = ST_MULTI;
			colorBackground[] = COLOR_TRANSPARENT;
			colorText[] = COLOR_LIGHT_GRAY;
			text = "";
			sizeEx = .08;
			lineSpacing = 1;
			x = -0.42;
			y = 0.135;
			w = 1.1;
			h = 0.15;
		};
		
		class TimeSlider : Base
		{
			idc = 10012;
			type = 3; 
			style = 1024; 
			colorBackground[] = COLOR_TRANSPARENT;
			colorText[] = COLOR_WHITE;
			x = 0; 
			y = 0.045;
			w = 1; 
			h = 0.1;			
			sizeEx = .05;
			color[] = COLOR_LIGHT_GRAY; 
			colorActive[] = COLOR_LIGHT_GRAY;
			// EventHandler to update the slider via the mouse wheel 
			onMouseZChanged = "_step = (sliderSpeed (_this select 0)) select 1; _dir = if (_this select 1>0) then {1} else {-1}; (_this select 0) sliderSetPosition (sliderPosition (_this select 0) + _step*_dir)"; 
		};
		
		class TimeText : Base
		{
			type = 0;
			idc = 10013;
			style = ST_MULTI;
			colorBackground[] = COLOR_TRANSPARENT;
			colorText[] = COLOR_LIGHT_GRAY;
			text = "";
			sizeEx = .08;
			lineSpacing = 1;
			x = -0.42;
			y = 0;
			w = 1.1;
			h = 0.15;
		};
		
		class HumiditySlider : Base
		{
			idc = 10014;
			type = 3; 
			style = 1024; 
			colorBackground[] = COLOR_TRANSPARENT;
			colorText[] = COLOR_WHITE;
			x = 0; 
			y = 0.3; 
			w = 1; 
			h = 0.1;			
			sizeEx = .05;
			color[] = COLOR_LIGHT_GRAY; 
			colorActive[] = COLOR_LIGHT_GRAY;
			// EventHandler to update the slider via the mouse wheel 
			onMouseZChanged = "_step = (sliderSpeed (_this select 0)) select 1; _dir = if (_this select 1>0) then {1} else {-1}; (_this select 0) sliderSetPosition (sliderPosition (_this select 0) + _step*_dir)"; 
		};
		
		class HumidityText : Base
		{
			type = 0;
			idc = 10015;
			style = ST_MULTI;
			colorBackground[] = COLOR_TRANSPARENT;
			colorText[] = COLOR_LIGHT_GRAY;
			text = "";
			sizeEx = .08;
			lineSpacing = 1;
			x = -0.42;
			y = 0.255;
			w = 1.1;
			h = 0.15;
		};
		
		class WeightSlider : Base
		{
			idc = 10016;
			type = 3; 
			style = 1024; 
			colorBackground[] = COLOR_TRANSPARENT;
			colorText[] = COLOR_WHITE;
			x = 0.2; 
			y = 0.8; 
			w = 0.8; 
			h = 0.1;			
			sizeEx = .05;
			color[] = COLOR_LIGHT_GRAY; 
			colorActive[] = COLOR_LIGHT_GRAY;
			// EventHandler to update the slider via the mouse wheel 
			onMouseZChanged = "_step = (sliderSpeed (_this select 0)) select 1; _dir = if (_this select 1>0) then {1} else {-1}; (_this select 0) sliderSetPosition (sliderPosition (_this select 0) + _step*_dir)"; 
		};
		
		class WeightText : Base
		{
			type = 0;
			idc = 10017;
			style = ST_MULTI;
			colorBackground[] = COLOR_TRANSPARENT;
			colorText[] = COLOR_LIGHT_GRAY;
			text = "";
			sizeEx = .08;
			lineSpacing = 1;
			x = 0.2;
			y = 0.6;
			w = 1.1;
			h = 0.15;
		};
		
		class CargoText : Base
		{
			type = 0;
			idc = 10018;
			style = ST_MULTI;
			colorBackground[] = COLOR_TRANSPARENT;
			colorText[] = COLOR_LIGHT_GRAY;
			text = "";
			sizeEx = .08;
			lineSpacing = 1;
			x = 1.2;
			y = 0.55;
			w = 1.1;
			h = 0.15;
		};
		
		class InfoText : Base
		{
			type = 0;
			idc = 10019;
			style = ST_MULTI;
			colorBackground[] = COLOR_TRANSPARENT;
			colorText[] = COLOR_LIGHT_GRAY;
			text = "";
			sizeEx = .04;
			lineSpacing = 1;
			x = -0.42;
			y = 1.15;
			w = 1.1;
			h = 0.15;
		};
		
		class RscMapControl : Base
		{
			access = 0;
			type = 101;
			idc = 10020;
			style = 48;
			colorBackground[] = {0.969,0.957,0.949,1};
			colorOutside[] = {0,0,0,1};
			colorText[] = {0,0,0,1};
			sizeEx = 0.029;
			colorSea[] = {0.467,0.631,0.851,0.5};
			colorForest[] = {0.624,0.78,0.388,0.5};
			colorRocks[] = {0,0,0,0.3};
			colorCountlines[] = {0.572,0.354,0.188,0.25};
			colorMainCountlines[] = {0.572,0.354,0.188,0.5};
			colorCountlinesWater[] = {0.491,0.577,0.702,0.3};
			colorMainCountlinesWater[] = {0.491,0.577,0.702,0.6};
			colorForestBorder[] = {0,0,0,0};
			colorRocksBorder[] = {0,0,0,0};
			colorPowerLines[] = {0.1,0.1,0.1,1};
			colorRailWay[] = {0.8,0.2,0,1};
			colorNames[] = {0.1,0.1,0.1,0.9};
			colorInactive[] = {1,1,1,0.5};
			colorLevels[] = {0.286,0.177,0.094,0.5};
			colorTracks[] = {0.84,0.76,0.65,0.15};
			colorRoads[] = {0.7,0.7,0.7,1};
			colorMainRoads[] = {0.9,0.5,0.3,1};
			colorTracksFill[] = {0.84,0.76,0.65,1};
			colorRoadsFill[] = {1,1,1,1};
			colorMainRoadsFill[] = {1,0.6,0.4,1};
			colorGrid[] = {0.1,0.1,0.1,0.6};
			colorGridMap[] = {0.1,0.1,0.1,0.6};
			stickX[] = {0.2,{"Gamma",1,1.5}};
			stickY[] = {0.2,{"Gamma",1,1.5}};
			
			class ActiveMarker
			{
				color[] = {0.3,0.1,0.9,1};
				size = 50;
			};
			class Command
			{
				color[] = {1,1,1,1};
				icon = "\A3\ui_f\data\map\mapcontrol\waypoint_ca.paa";
				size = 18;
				importance = 1;
				coefMin = 1;
				coefMax = 1;
			};
			class Task
			{
				colorCreated[] = {1,1,1,1};
				colorCanceled[] = {0.7,0.7,0.7,1};
				colorDone[] = {0.7,1,0.3,1};
				colorFailed[] = {1,0.3,0.2,1};
				color[] = {"(profilenamespace getvariable ['IGUI_TEXT_RGB_R',0])","(profilenamespace getvariable ['IGUI_TEXT_RGB_G',1])","(profilenamespace getvariable ['IGUI_TEXT_RGB_B',1])","(profilenamespace getvariable ['IGUI_TEXT_RGB_A',0.8])"};
				icon = "\A3\ui_f\data\map\mapcontrol\taskIcon_CA.paa";
				iconCreated = "\A3\ui_f\data\map\mapcontrol\taskIconCreated_CA.paa";
				iconCanceled = "\A3\ui_f\data\map\mapcontrol\taskIconCanceled_CA.paa";
				iconDone = "\A3\ui_f\data\map\mapcontrol\taskIconDone_CA.paa";
				iconFailed = "\A3\ui_f\data\map\mapcontrol\taskIconFailed_CA.paa";
				size = 27;
				importance = 1;
				coefMin = 1;
				coefMax = 1;
			};
			class CustomMark
			{
				color[] = {0,0,0,1};
				icon = "\A3\ui_f\data\map\mapcontrol\custommark_ca.paa";
				size = 24;
				importance = 1;
				coefMin = 1;
				coefMax = 1;
			};
			class Tree
			{
				color[] = {0.45,0.64,0.33,0.4};
				icon = "\A3\ui_f\data\map\mapcontrol\bush_ca.paa";
				size = 12;
				importance = "0.9 * 16 * 0.05";
				coefMin = 0.25;
				coefMax = 4;
			};
			class SmallTree
			{
				color[] = {0.45,0.64,0.33,0.4};
				icon = "\A3\ui_f\data\map\mapcontrol\bush_ca.paa";
				size = 12;
				importance = "0.6 * 12 * 0.05";
				coefMin = 0.25;
				coefMax = 4;
			};
			class Bush
			{
				color[] = {0.45,0.64,0.33,0.4};
				icon = "\A3\ui_f\data\map\mapcontrol\bush_ca.paa";
				size = "14/2";
				importance = "0.2 * 14 * 0.05 * 0.05";
				coefMin = 0.25;
				coefMax = 4;
			};
			class Church
			{
				color[] = {1,1,1,1};
				icon = "\A3\ui_f\data\map\mapcontrol\church_CA.paa";
				size = 24;
				importance = 1;
				coefMin = 0.85;
				coefMax = 1;
			};
			class Chapel
			{
				color[] = {0,0,0,1};
				icon = "\A3\ui_f\data\map\mapcontrol\Chapel_CA.paa";
				size = 24;
				importance = 1;
				coefMin = 0.85;
				coefMax = 1;
			};
			class Cross
			{
				color[] = {0,0,0,1};
				icon = "\A3\ui_f\data\map\mapcontrol\Cross_CA.paa";
				size = 24;
				importance = 1;
				coefMin = 0.85;
				coefMax = 1;
			};
			class Rock
			{
				color[] = {0.1,0.1,0.1,0.8};
				icon = "\A3\ui_f\data\map\mapcontrol\rock_ca.paa";
				size = 12;
				importance = "0.5 * 12 * 0.05";
				coefMin = 0.25;
				coefMax = 4;
			};
			class Bunker
			{
				color[] = {0,0,0,1};
				icon = "\A3\ui_f\data\map\mapcontrol\bunker_ca.paa";
				size = 14;
				importance = "1.5 * 14 * 0.05";
				coefMin = 0.25;
				coefMax = 4;
			};
			class Fortress
			{
				color[] = {0,0,0,1};
				icon = "\A3\ui_f\data\map\mapcontrol\bunker_ca.paa";
				size = 16;
				importance = "2 * 16 * 0.05";
				coefMin = 0.25;
				coefMax = 4;
			};
			class Fountain
			{
				color[] = {0,0,0,1};
				icon = "\A3\ui_f\data\map\mapcontrol\fountain_ca.paa";
				size = 11;
				importance = "1 * 12 * 0.05";
				coefMin = 0.25;
				coefMax = 4;
			};
			class ViewTower
			{
				color[] = {0,0,0,1};
				icon = "\A3\ui_f\data\map\mapcontrol\viewtower_ca.paa";
				size = 16;
				importance = "2.5 * 16 * 0.05";
				coefMin = 0.5;
				coefMax = 4;
			};
			class Lighthouse
			{
				color[] = {1,1,1,1};
				icon = "\A3\ui_f\data\map\mapcontrol\lighthouse_CA.paa";
				size = 24;
				importance = 1;
				coefMin = 0.85;
				coefMax = 1;
			};
			class Quay
			{
				color[] = {1,1,1,1};
				icon = "\A3\ui_f\data\map\mapcontrol\quay_CA.paa";
				size = 24;
				importance = 1;
				coefMin = 0.85;
				coefMax = 1;
			};
			class Fuelstation
			{
				color[] = {1,1,1,1};
				icon = "\A3\ui_f\data\map\mapcontrol\fuelstation_CA.paa";
				size = 24;
				importance = 1;
				coefMin = 0.85;
				coefMax = 1;
			};
			class Hospital
			{
				color[] = {1,1,1,1};
				icon = "\A3\ui_f\data\map\mapcontrol\hospital_CA.paa";
				size = 24;
				importance = 1;
				coefMin = 0.85;
				coefMax = 1;
			};
			class BusStop
			{
				color[] = {1,1,1,1};
				icon = "\A3\ui_f\data\map\mapcontrol\busstop_CA.paa";
				size = 24;
				importance = 1;
				coefMin = 0.85;
				coefMax = 1;
			};
			class Transmitter
			{
				color[] = {1,1,1,1};
				icon = "\A3\ui_f\data\map\mapcontrol\transmitter_CA.paa";
				size = 24;
				importance = 1;
				coefMin = 0.85;
				coefMax = 1;
			};
			class Stack
			{
				color[] = {0,0,0,1};
				icon = "\A3\ui_f\data\map\mapcontrol\stack_ca.paa";
				size = 20;
				importance = "2 * 16 * 0.05";
				coefMin = 0.9;
				coefMax = 4;
			};
			class Ruin
			{
				color[] = {0,0,0,1};
				icon = "\A3\ui_f\data\map\mapcontrol\ruin_ca.paa";
				size = 16;
				importance = "1.2 * 16 * 0.05";
				coefMin = 1;
				coefMax = 4;
			};
			class Tourism
			{
				color[] = {0,0,0,1};
				icon = "\A3\ui_f\data\map\mapcontrol\tourism_ca.paa";
				size = 16;
				importance = "1 * 16 * 0.05";
				coefMin = 0.7;
				coefMax = 4;
			};
			class Watertower
			{
				color[] = {1,1,1,1};
				icon = "\A3\ui_f\data\map\mapcontrol\watertower_CA.paa";
				size = 24;
				importance = 1;
				coefMin = 0.85;
				coefMax = 1;
			};
			class Waypoint
			{
				color[] = {0,0,0,1};
				size = 24;
				importance = 1;
				coefMin = 1;
				coefMax = 1;
				icon = "\A3\ui_f\data\map\mapcontrol\waypoint_ca.paa";
			};
			class WaypointCompleted
			{
				color[] = {0,0,0,1};
				size = 24;
				importance = 1;
				coefMin = 1;
				coefMax = 1;
				icon = "\A3\ui_f\data\map\mapcontrol\waypointCompleted_ca.paa";
			};
			
			moveOnEdges = 0;
			x = -0.42;
			y = 0.5;
			w = 0.6;
			h = 0.7;
			shadow = 0;
			ptsPerSquareSea = 5;
			ptsPerSquareTxt = 3;
			ptsPerSquareCLn = 10;
			ptsPerSquareExp = 10;
			ptsPerSquareCost = 10;
			ptsPerSquareFor = 9;
			ptsPerSquareForEdge = 9;
			ptsPerSquareRoad = 6;
			ptsPerSquareObj = 9;
			showCountourInterval = 0;
			scaleMin = 0.15;
			scaleMax = 0.15;
			scaleDefault = 0.15;
			maxSatelliteAlpha = 0.85;
			alphaFadeStartScale = 2.1;
			alphaFadeEndScale = 2.1;
			fontLabel = "PuristaMedium";
			sizeExLabel = 0.1;
			fontGrid = "TahomaB";
			sizeExGrid = 0.02;
			fontUnits = "TahomaB";
			sizeExUnits = 0.1;
			fontNames = "PuristaMedium";
			sizeExNames = 0.1;
			fontInfo = "PuristaMedium";
			sizeExInfo = 0.1;
			fontLevel = "PuristaMedium";
			sizeExLevel = 0.02;
			text = "#(argb,8,8,3)color(1,1,1,1)";
			//text = "\a3\ui_f\data\map_background2_co.paa";
			
			class power
			{
				icon = "\A3\ui_f\data\map\mapcontrol\power_CA.paa";
				size = 24;
				importance = 1;
				coefMin = 0.85;
				coefMax = 1;
				color[] = {1,1,1,1};
			};
			
			class powersolar
			{
				icon = "\A3\ui_f\data\map\mapcontrol\powersolar_CA.paa";
				size = 24;
				importance = 1;
				coefMin = 0.85;
				coefMax = 1;
				color[] = {1,1,1,1};
			};
			class powerwave
			{
				icon = "\A3\ui_f\data\map\mapcontrol\powerwave_CA.paa";
				size = 24;
				importance = 1;
				coefMin = 0.85;
				coefMax = 1;
				color[] = {1,1,1,1};
			};
			class powerwind
			{
				icon = "\A3\ui_f\data\map\mapcontrol\powerwind_CA.paa";
				size = 24;
				importance = 1;
				coefMin = 0.85;
				coefMax = 1;
				color[] = {1,1,1,1};
			};
			class shipwreck
			{
				icon = "\A3\ui_f\data\map\mapcontrol\shipwreck_CA.paa";
				size = 24;
				importance = 1;
				coefMin = 0.85;
				coefMax = 1;
				color[] = {1,1,1,1};
			};
		};

		class ChangeTask : Base
		{
			type = 1;  // CT_BUTTON
			style = 16; // ST_CENTER
			fadein = 0;
			fadeout = 0;
			idc = 10001;
			x = 0.2;
			y = 0.5;
			w = .3;
			h = .1;
			text = "Change Destination";
			sizeEx = .05;
	
			colorText[] = {1,1,1,1};                    			 // colors of text and background
			colorBackground[] = {.4,.4,.4,.6};            			 // red text on blue background 
			colorFocused[] = {.4,.4,.4,.6};                			 // background's opacity changes when having focus
			colorBackgroundActive[] = {.2,.2,.2,.6};       			 // background turns green on mouseOver 
			 
			colorDisabled[] = {.3,.3,.3,1};             			 // colors if disabled
			colorBackgroundDisabled[] = {.1,.1,.1,1};   			 

			colorShadow[] = {0,0,0,.3};                 			 // color and offset of drop shadow
			offsetX = .001;                             			  
			offsetY = .001;                             			  

			offsetPressedX = .0005;                     			  // offset when pressed
			offsetPressedY = .0005;                     			   

			borderSize = 0;                             			 // no left-hand border
			colorBorder[] = {};                         			 

			soundEnter[] = {};                          			 // no sounds
			soundPush[] = {};			 
			soundClick[] = {};			 
			soundEscape[] = {};			 

			action = "call f_changeTask";							 // action when pressed
			toolTip = "Change the destination of the cargo";		 // tooltip
		};
	};	
};